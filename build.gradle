// Gradle Plugins DSL Standard
plugins {
    id 'java'
    id 'jacoco'
    id 'eclipse'
    id 'idea'
    id 'pmd'
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id "com.github.spotbugs" version "3.0.0"
    id "com.bmuschko.clover" version "2.2.4"
}

// Gradle Project Configurations
configurations { developmentOnly; runtimeClasspath { extendsFrom developmentOnly } }
group = projectGroup                                       
version = projectVersion
sourceCompatibility = projectSourceCompatibility
targetCompatibility = projectTargetCompatibility
bootJar { archiveFileName = "$archiveBaseName.$archiveExtension" }
repositories { mavenCentral() }

// Application dependencies
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'junit:junit:4.12'
    clover 'org.openclover:clover:4.4.1'
}

// Code Analysis/Report Configurations
clover { report { html = true }; testIncludes = ['**/*Test.java', '**/*Tests.java'] }
spotbugs { ignoreFailures = true; spotbugsTest.enabled = false }
tasks.withType(Pmd){ reports{ xml.enabled=true; html.enabled=true } }
pmd { ignoreFailures = true; pmdTest.enabled=false }
jacoco { toolVersion = "0.8.5" }
jacocoTestReport { reports { xml.enabled true; csv.enabled true } }

// Catch all Gradle task to run a complete clean build
task cleanBuild {
    dependsOn 'clean'
    dependsOn 'test'
    dependsOn 'check'
    dependsOn 'jacocoTestReport'
    dependsOn 'cloverGenerateReport'

    tasks.findByName('test').mustRunAfter('clean')
    tasks.findByName('check').mustRunAfter('test')
    tasks.findByName('jacocoTestReport').mustRunAfter('check')
    tasks.findByName('cloverGenerateReport').mustRunAfter('jacocoTestReport')
}
